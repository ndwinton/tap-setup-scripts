### TanzuNet credentials
export TN_USERNAME=user@example.com
export TN_PASSWORD='password with a special character that requires single quotes!'

### External image repo (e.g. DockerHub) details
# DockerHub requires the format username/registry. Other registries,
# such as Harbor are different and likely to be of the form
# my.repo.host/my-project/my-registry
export REGISTRY=user/tap 
export REG_USERNAME=username
export REG_PASSWORD=password
### For GCR use something like this:
#  export REGISTRY=gcr.io/my-project/tap
#  export REG_USERNAME=_json_key  # Exactly this value
#  export REG_PASSWORD="$(cat gcr-access-key.json)" # A service account key

### Installation configuration

# INFRASTRUCTURE_PROVIDER - What kind of K8s infrastructure is used?
# The script will attempt to work this out, so you can leave it blank.
# If there are problems, however, possible values are: aws, google, vsphere
# kind and minikube.
# This primarily affects how the Contour ingress controller is exposed.
# For aws and google a LoadBalancer is used, otherwise it defaults to
# NodePort. In the case of AWS, it uses a "classic" load balancer.
export INFRASTRUCTURE_PROVIDER= 

# INSTALL_PROFILE
# Either one of 'full' or 'dev' or a space-separated list of individual
# (short-form) package names
export INSTALL_PROFILE=full

# EXCLUDED_PACKAGES
# If using 'full' or 'dev' profiles, this is a space-separated
# list of packages NOT to include (or 'none' if there are no
# packages to exclude).
export EXCLUDED_PACKAGES=none

# SUPPLY_CHAIN and EXTRA_SUPPLY_CHAIN
# The choice of primary supply chain. Valid values are: none, basic,
# testing, or scanning.
# It is also possible to install a second supply chain, although
# this may not be a supported configuration.
export SUPPLY_CHAIN=testing 
export EXTRA_SUPPLY_CHAIN=none


# The DOMAIN must be a static URL which does not change with the
# underlying IP or LoadBalancer. This means you cannot use clever
# DNS mapping sites such as 'nip.io' if these values will change.
#
# NOTE: Setting DOMAIN to 'vcap.me' (which resolves to 127.0.0.1)
# indicates that this is a purely local installation.
export DOMAIN=example.com
# GUI_DOMAIN is only needed if the tap-gui package is selected for
# installation, either directly or as part of the full or dev profiles.
# NOTE: This is served on port 7000
export GUI_DOMAIN="gui.$DOMAIN"
# APPS_DOMAIN is the sub-domain under which all apps will be deployed
export APPS_DOMAIN="apps.$DOMAIN"
# EDUCATES_DOMAIN is only needed if learningcenter package is selected
# for installation
export EDUCATES_DOMAIN="learn.$DOMAIN" 

# GUI_CATALOG_URL
# The GUI needs a (blank) catalog to present.
export GUI_CATALOG_URL=https://github.com/your-registry/tap-blank-catalog/blob/main/catalog-info.yaml

### AWS values, OK to omit if you are not installing on AWS
export AWS_REGION=us-east-2 # Pick a region.
export EKS_CLUSTER_NAME=my-aws-eks-cluster # Human-friendly name of EKS cluster, available in AWS Console.
